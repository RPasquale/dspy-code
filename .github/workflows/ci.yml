name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
      - name: Install minimal deps
        run: |
          python -m pip install --upgrade pip
          # Install package without heavy deps; tests import tolerate optional deps
          pip install --no-deps -e .
          pip install pytest transformers
      - name: Run tests (core)
        run: |
          pytest -q tests/test_models_api.py tests/test_eval_code_log_api.py tests/test_event_bus.py tests/test_events_api.py tests/test_events_sse.py tests/test_events_filters_export.py

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/react-dashboard
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: frontend/react-dashboard/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Run unit tests (vitest)
        run: npm run test:run
      - name: Build
        run: npm run build
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Start Preview
        run: |
          nohup npm run preview -- --port 4173 &
          sleep 2
      - name: Run E2E
        run: npm run e2e
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/react-dashboard/playwright-report
          if-no-files-found: ignore

  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build lightweight stack
        run: |
          make stack-build
      - name: Start stack
        run: |
          make stack-up
          # wait a bit for services
          sleep 15
      - name: Health check
        run: |
          make health-check || true
      - name: Stop stack
        if: always()
        run: make stack-down
