{{- if .Values.sparkApps.toolBatchExport.enabled }}
apiVersion: sparkoperator.k8s.io/v1beta2
kind: ScheduledSparkApplication
metadata:
  name: tool-batch-export-schedule
  namespace: {{ .Values.namespace }}
spec:
  schedule: {{ .Values.sparkApps.toolBatchExport.schedule | default "*/60 * * * *" | quote }}
  concurrencyPolicy: Forbid
  template:
    type: Python
    mode: cluster
    image: {{ .Values.image.spark }}
    imagePullPolicy: IfNotPresent
    sparkConf:
      spark.sql.adaptive.enabled: "true"
      spark.dynamicAllocation.enabled: {{ ternary "true" "false" .Values.dynamicAllocation.enabled }}
      spark.dynamicAllocation.shuffleTracking.enabled: {{ ternary "true" "false" .Values.dynamicAllocation.enabled }}
      spark.dynamicAllocation.minExecutors: "{{ .Values.dynamicAllocation.minExecutors }}"
      spark.dynamicAllocation.maxExecutors: "{{ .Values.dynamicAllocation.maxExecutors }}"
      spark.dynamicAllocation.initialExecutors: "{{ .Values.dynamicAllocation.initialExecutors }}"
    mainApplicationFile: local:///opt/app/streaming/topics/tool_batch_export.py
    sparkVersion: 3.5.1
    driver:
      cores: 1
      memory: 2g
      serviceAccount: {{ .Values.serviceAccount }}
      env:
        - name: WAREHOUSE_BASE
          value: {{ .Values.warehouseBase | quote }}
        - name: FEATURES_BASE
          value: {{ printf "%s/features" .Values.warehouseBase | quote }}
        - name: DATASET_DIR
          value: {{ printf "%s/datasets/grpo_tool_batches" .Values.warehouseBase | quote }}
        - name: GRPO_SHARD_SIZE
          value: {{ .Values.sparkApps.toolBatchExport.shardSize | default 4096 | quote }}
    executor:
      instances: 1
      cores: 1
      memory: 2g
    volumes:
      - name: warehouse
        persistentVolumeClaim:
          claimName: {{ .Values.pvc.warehouse.claim }}
      - name: checkpoints
        persistentVolumeClaim:
          claimName: {{ .Values.pvc.checkpoints.claim }}
    driver:
      volumeMounts:
        - name: warehouse
          mountPath: {{ .Values.warehouseBase }}
    executor:
      volumeMounts:
        - name: warehouse
          mountPath: {{ .Values.warehouseBase }}
{{- end }}
