{{- if .Values.sparkApps.toolMetrics.enabled }}
apiVersion: sparkoperator.k8s.io/v1beta2
kind: SparkApplication
metadata:
  name: tool-metrics
  namespace: {{ .Values.namespace }}
spec:
  type: Python
  mode: cluster
  image: {{ .Values.image.spark }}
  imagePullPolicy: IfNotPresent
  sparkConf:
    spark.sql.adaptive.enabled: "true"
    spark.dynamicAllocation.enabled: {{ ternary "true" "false" .Values.dynamicAllocation.enabled }}
    spark.dynamicAllocation.shuffleTracking.enabled: {{ ternary "true" "false" .Values.dynamicAllocation.enabled }}
    spark.dynamicAllocation.minExecutors: "{{ .Values.dynamicAllocation.minExecutors }}"
    spark.dynamicAllocation.maxExecutors: "{{ .Values.dynamicAllocation.maxExecutors }}"
    spark.dynamicAllocation.initialExecutors: "{{ .Values.dynamicAllocation.initialExecutors }}"
  mainApplicationFile: local:///opt/app/streaming/topics/tool_metrics.py
  sparkVersion: 3.5.1
  driver:
    cores: {{ .Values.sparkApps.toolMetrics.driver.cores }}
    memory: {{ .Values.sparkApps.toolMetrics.driver.memory | quote }}
    serviceAccount: {{ .Values.serviceAccount }}
    env:
      - name: WAREHOUSE_BASE
        value: {{ .Values.warehouseBase | quote }}
      - name: METRICS_BASE
        value: {{ printf "%s/metrics" .Values.warehouseBase | quote }}
  executor:
    instances: {{ .Values.sparkApps.toolMetrics.executor.instances }}
    cores: {{ .Values.sparkApps.toolMetrics.executor.cores }}
    memory: {{ .Values.sparkApps.toolMetrics.executor.memory | quote }}
  volumes:
    - name: warehouse
      persistentVolumeClaim:
        claimName: {{ .Values.pvc.warehouse.claim }}
    - name: checkpoints
      persistentVolumeClaim:
        claimName: {{ .Values.pvc.checkpoints.claim }}
    - name: landing
      persistentVolumeClaim:
        claimName: {{ .Values.pvc.landing.claim }}
  driver:
    volumeMounts:
      - name: warehouse
        mountPath: {{ .Values.warehouseBase }}
      - name: checkpoints
        mountPath: {{ .Values.checkpointsBase }}
      - name: landing
        mountPath: /landing
  executor:
    volumeMounts:
      - name: warehouse
        mountPath: {{ .Values.warehouseBase }}
      - name: checkpoints
        mountPath: {{ .Values.checkpointsBase }}
      - name: landing
        mountPath: /landing
{{- end }}
