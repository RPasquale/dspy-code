services:
    dspy-agent:
      image: dspy-lightweight:latest
      build:
        context: .
        dockerfile: Dockerfile
      environment:
        - LOCAL_MODE=false
        - USE_OLLAMA=true
        - DB_BACKEND=auto
        - DSPY_AUTO_APPLY_PATCHES=0
        - REDDB_URL
        - REDDB_NAMESPACE=dspy
        - REDDB_TOKEN
        - MODEL_NAME=qwen3:1.7b
        - OPENAI_API_KEY=
        - OPENAI_BASE_URL=http://ollama:11434
        - OLLAMA_MODEL=qwen3:1.7b
        - OLLAMA_API_KEY=
        - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
        - KAFKA_CLIENT_ID=dspy-agent
        - KAFKA_TOPIC_PREFIX
      entrypoint: ["/entrypoints/run_dspy_agent.sh"]
      volumes:
        - /Users/robbiepasquale/dspy_stuff:/workspace:rw
        - /Users/robbiepasquale/dspy_stuff/logs:/workspace/logs:ro
        - /Users/robbiepasquale:/host:rw
        - ./entrypoints:/entrypoints:ro
      ports:
        - "127.0.0.1:8765:8765"
        - "127.0.0.1:18081:8081"
      restart: unless-stopped
      deploy:
        resources:
          limits:
            memory: 4G
            cpus: '2.0'
          reservations:
            memory: 2G
            cpus: '1.0'
      depends_on:
        kafka:
          condition: service_healthy

    ollama:
      image: ollama/ollama:latest
      entrypoint: ["/bin/sh", "/entrypoints/run_ollama.sh"]
      ports:
        - "127.0.0.1:11435:11434"
      volumes:
        - ollama:/root/.ollama
        - ./entrypoints:/entrypoints:ro
      environment:
        - OLLAMA_MAX_LOADED_MODELS=1
        - OLLAMA_NUM_PARALLEL=1
        - OLLAMA_MAX_QUEUE=512
      deploy:
        resources:
          limits:
            memory: 6G
            cpus: '4.0'
          reservations:
            memory: 3G
            cpus: '2.0'
      healthcheck:
        test: ["CMD-SHELL", "curl -f http://localhost:11434/api/tags || exit 1"]
        interval: 10s
        timeout: 5s
        retries: 20
        start_period: 10s

    zookeeper:
      image: bitnami/zookeeper:3.9
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
      ports:
        - "127.0.0.1:2181:2181"
      healthcheck:
        test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok || exit 1"]
        interval: 10s
        timeout: 3s
        retries: 20
        start_period: 5s

    kafka:
      image: bitnami/kafka:3.6
      depends_on:
        - zookeeper
      environment:
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_LISTENERS=PLAINTEXT://:9092
        - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
        - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      ports:
        - "127.0.0.1:9092:9092"
      healthcheck:
        test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 || exit 1"]
        interval: 10s
        timeout: 3s
        retries: 20
        start_period: 10s

    spark:
      image: bitnami/spark:3.5
      depends_on:
        kafka:
          condition: service_healthy
      user: "0:0"
      environment:
        - HOME=/opt/bitnami/spark
        - USER=spark
        - SPARK_USER=spark
        - HADOOP_USER_NAME=spark
        - SPARK_LOCAL_DIRS=/tmp
        - SPARK_CONF_DIR=/opt/bitnami/spark/conf
      volumes:
        - /Users/robbiepasquale/dspy_stuff:/workspace
        - ./scripts:/app/scripts:ro
        - ./entrypoints:/entrypoints:ro
      entrypoint: ["/entrypoints/run_spark.sh"]
      healthcheck:
        test: ["CMD-SHELL", "pgrep -f 'spark_logs.py' >/dev/null 2>&1 || exit 1"]
        interval: 30s
        timeout: 5s
        retries: 10
        start_period: 20s

    dspy-worker:
      image: dspy-lightweight:latest
      depends_on:
        kafka:
          condition: service_healthy
      entrypoint: ["/entrypoints/run_worker.sh", "app"]
      volumes:
        - /Users/robbiepasquale/dspy_stuff:/workspace:rw
        - ./entrypoints:/entrypoints:ro
      healthcheck:
        test: ["CMD-SHELL", "pgrep -f 'dspy-agent worker --topic app' >/dev/null 2>&1 || exit 1"]
        interval: 15s
        timeout: 5s
        retries: 10
        start_period: 10s

    dspy-worker-backend:
      image: dspy-lightweight:latest
      depends_on:
        kafka:
          condition: service_healthy
      entrypoint: ["/entrypoints/run_worker.sh", "backend"]
      volumes:
        - /Users/robbiepasquale/dspy_stuff:/workspace:rw
        - ./entrypoints:/entrypoints:ro
      healthcheck:
        test: ["CMD-SHELL", "pgrep -f 'dspy-agent worker --topic backend' >/dev/null 2>&1 || exit 1"]
        interval: 15s
        timeout: 5s
        retries: 10
        start_period: 10s

    dspy-worker-frontend:
      image: dspy-lightweight:latest
      depends_on:
        kafka:
          condition: service_healthy
      entrypoint: ["/entrypoints/run_worker.sh", "frontend"]
      volumes:
        - /Users/robbiepasquale/dspy_stuff:/workspace:rw
        - ./entrypoints:/entrypoints:ro
      healthcheck:
        test: ["CMD-SHELL", "pgrep -f 'dspy-agent worker --topic frontend' >/dev/null 2>&1 || exit 1"]
        interval: 15s
        timeout: 5s
        retries: 10
        start_period: 10s

    dspy-code-watch:
      image: dspy-lightweight:latest
      depends_on:
        kafka:
          condition: service_healthy
      entrypoint: ["/bin/bash", "-lc"]
      command: >-
        python - <<'PY'
        from dspy_agent.code_tools.code_watch import CodeWatcher
        from pathlib import Path
        CodeWatcher(Path('/workspace')).run()
        PY
      volumes:
        - /Users/robbiepasquale/dspy_stuff:/workspace:rw
      healthcheck:
        test: ["CMD-SHELL", "pgrep -f 'code_watch' >/dev/null 2>&1 || exit 1"]
        interval: 15s
        timeout: 5s
        retries: 10
        start_period: 10s

    dspy-code-indexer:
      image: dspy-lightweight:latest
      depends_on:
        kafka:
          condition: service_healthy
      entrypoint: ["/bin/bash", "-lc"]
      command: >-
        python - <<'PY'
        from dspy_agent.code_tools.code_indexer_worker import CodeIndexerWorker
        CodeIndexerWorker('kafka:9092').run()
        PY
      volumes:
        - /Users/robbiepasquale/dspy_stuff:/workspace:rw
      healthcheck:
        test: ["CMD-SHELL", "pgrep -f 'code_indexer_worker' >/dev/null 2>&1 || exit 1"]
        interval: 15s
        timeout: 5s
        retries: 10
        start_period: 10s

    dspy-router:
      image: dspy-lightweight:latest
      depends_on:
        kafka:
          condition: service_healthy
      entrypoint: ["/entrypoints/run_router.sh"]
      volumes:
        - ./entrypoints:/entrypoints:ro
      healthcheck:
        test: ["CMD-SHELL", "pgrep -f 'router_worker' >/dev/null 2>&1 || exit 1"]
        interval: 15s
        timeout: 5s
        retries: 10
        start_period: 10s

volumes:
  ollama: {}
