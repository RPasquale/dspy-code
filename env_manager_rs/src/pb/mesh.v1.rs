// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SendRequest {
    #[prost(uint64, tag="1")]
    pub src_node: u64,
    #[prost(uint64, tag="2")]
    pub dst_node: u64,
    #[prost(bytes="vec", tag="3")]
    pub payload: ::prost::alloc::vec::Vec<u8>,
    #[prost(bool, tag="4")]
    pub require_ack: bool,
    #[prost(string, tag="5")]
    pub domain: ::prost::alloc::string::String,
    #[prost(string, tag="6")]
    pub trace_id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SendResponse {
    #[prost(string, tag="1")]
    pub delivery_id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SubscribeRequest {
    #[prost(uint64, tag="1")]
    pub node_id: u64,
    #[prost(string, tag="2")]
    pub domain: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Received {
    #[prost(string, tag="1")]
    pub delivery_id: ::prost::alloc::string::String,
    #[prost(uint64, tag="2")]
    pub src_node: u64,
    #[prost(uint64, tag="3")]
    pub dst_node: u64,
    #[prost(bytes="vec", tag="4")]
    pub payload: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag="5")]
    pub domain: ::prost::alloc::string::String,
    #[prost(string, tag="6")]
    pub trace_id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AckRequest {
    #[prost(string, tag="1")]
    pub delivery_id: ::prost::alloc::string::String,
    #[prost(uint64, tag="2")]
    pub node_id: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PublishStateRequest {
    #[prost(uint64, tag="1")]
    pub node_id: u64,
    #[prost(string, tag="2")]
    pub domain: ::prost::alloc::string::String,
    #[prost(bytes="vec", tag="3")]
    pub state_blob: ::prost::alloc::vec::Vec<u8>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetTopologyRequest {
    #[prost(string, tag="1")]
    pub domain: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Topology {
    #[prost(uint64, repeated, tag="1")]
    pub neighbors: ::prost::alloc::vec::Vec<u64>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SetPolicyRequest {
    #[prost(string, tag="1")]
    pub domain: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub policy_blob: ::prost::alloc::string::String,
}
include!("mesh.v1.tonic.rs");
// @@protoc_insertion_point(module)