// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: env_manager.v1.proto

package envmanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Service startup
type StartServicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceNames  []string               `protobuf:"bytes,1,rep,name=service_names,json=serviceNames,proto3" json:"service_names,omitempty"`                                                 // empty = all services
	Parallel      bool                   `protobuf:"varint,2,opt,name=parallel,proto3" json:"parallel,omitempty"`                                                                            // parallel startup where possible
	Overrides     map[string]string      `protobuf:"bytes,3,rep,name=overrides,proto3" json:"overrides,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // service-specific config overrides
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartServicesRequest) Reset() {
	*x = StartServicesRequest{}
	mi := &file_env_manager_v1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServicesRequest) ProtoMessage() {}

func (x *StartServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServicesRequest.ProtoReflect.Descriptor instead.
func (*StartServicesRequest) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{0}
}

func (x *StartServicesRequest) GetServiceNames() []string {
	if x != nil {
		return x.ServiceNames
	}
	return nil
}

func (x *StartServicesRequest) GetParallel() bool {
	if x != nil {
		return x.Parallel
	}
	return false
}

func (x *StartServicesRequest) GetOverrides() map[string]string {
	if x != nil {
		return x.Overrides
	}
	return nil
}

type ServiceStatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // starting, healthy, unhealthy, stopped
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Progress      int32                  `protobuf:"varint,4,opt,name=progress,proto3" json:"progress,omitempty"` // 0-100
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceStatusUpdate) Reset() {
	*x = ServiceStatusUpdate{}
	mi := &file_env_manager_v1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatusUpdate) ProtoMessage() {}

func (x *ServiceStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatusUpdate.ProtoReflect.Descriptor instead.
func (*ServiceStatusUpdate) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceStatusUpdate) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceStatusUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ServiceStatusUpdate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceStatusUpdate) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type StopServicesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServiceNames   []string               `protobuf:"bytes,1,rep,name=service_names,json=serviceNames,proto3" json:"service_names,omitempty"` // empty = all services
	TimeoutSeconds int32                  `protobuf:"varint,2,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StopServicesRequest) Reset() {
	*x = StopServicesRequest{}
	mi := &file_env_manager_v1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServicesRequest) ProtoMessage() {}

func (x *StopServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServicesRequest.ProtoReflect.Descriptor instead.
func (*StopServicesRequest) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{2}
}

func (x *StopServicesRequest) GetServiceNames() []string {
	if x != nil {
		return x.ServiceNames
	}
	return nil
}

func (x *StopServicesRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type StopServicesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ServiceResults map[string]string      `protobuf:"bytes,2,rep,name=service_results,json=serviceResults,proto3" json:"service_results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // service_name -> result message
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StopServicesResponse) Reset() {
	*x = StopServicesResponse{}
	mi := &file_env_manager_v1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServicesResponse) ProtoMessage() {}

func (x *StopServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServicesResponse.ProtoReflect.Descriptor instead.
func (*StopServicesResponse) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{3}
}

func (x *StopServicesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopServicesResponse) GetServiceResults() map[string]string {
	if x != nil {
		return x.ServiceResults
	}
	return nil
}

type RestartServiceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServiceName    string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,2,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RestartServiceRequest) Reset() {
	*x = RestartServiceRequest{}
	mi := &file_env_manager_v1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartServiceRequest) ProtoMessage() {}

func (x *RestartServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartServiceRequest.ProtoReflect.Descriptor instead.
func (*RestartServiceRequest) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{4}
}

func (x *RestartServiceRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *RestartServiceRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type RestartServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartServiceResponse) Reset() {
	*x = RestartServiceResponse{}
	mi := &file_env_manager_v1_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartServiceResponse) ProtoMessage() {}

func (x *RestartServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartServiceResponse.ProtoReflect.Descriptor instead.
func (*RestartServiceResponse) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{5}
}

func (x *RestartServiceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RestartServiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Service status
type GetServicesStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceNames  []string               `protobuf:"bytes,1,rep,name=service_names,json=serviceNames,proto3" json:"service_names,omitempty"` // empty = all services
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServicesStatusRequest) Reset() {
	*x = GetServicesStatusRequest{}
	mi := &file_env_manager_v1_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServicesStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServicesStatusRequest) ProtoMessage() {}

func (x *GetServicesStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServicesStatusRequest.ProtoReflect.Descriptor instead.
func (*GetServicesStatusRequest) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{6}
}

func (x *GetServicesStatusRequest) GetServiceNames() []string {
	if x != nil {
		return x.ServiceNames
	}
	return nil
}

type ServicesStatusResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Services      map[string]*ServiceStatus `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServicesStatusResponse) Reset() {
	*x = ServicesStatusResponse{}
	mi := &file_env_manager_v1_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServicesStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesStatusResponse) ProtoMessage() {}

func (x *ServicesStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesStatusResponse.ProtoReflect.Descriptor instead.
func (*ServicesStatusResponse) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{7}
}

func (x *ServicesStatusResponse) GetServices() map[string]*ServiceStatus {
	if x != nil {
		return x.Services
	}
	return nil
}

type ServiceStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // running, stopped, starting, unhealthy
	ContainerId   string                 `protobuf:"bytes,3,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Ports         []int32                `protobuf:"varint,4,rep,packed,name=ports,proto3" json:"ports,omitempty"`
	HealthChecks  map[string]string      `protobuf:"bytes,5,rep,name=health_checks,json=healthChecks,proto3" json:"health_checks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StartedAt     int64                  `protobuf:"varint,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	ResourceUsage *ResourceUsage         `protobuf:"bytes,7,opt,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceStatus) Reset() {
	*x = ServiceStatus{}
	mi := &file_env_manager_v1_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatus) ProtoMessage() {}

func (x *ServiceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatus.ProtoReflect.Descriptor instead.
func (*ServiceStatus) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{8}
}

func (x *ServiceStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ServiceStatus) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ServiceStatus) GetPorts() []int32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *ServiceStatus) GetHealthChecks() map[string]string {
	if x != nil {
		return x.HealthChecks
	}
	return nil
}

func (x *ServiceStatus) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *ServiceStatus) GetResourceUsage() *ResourceUsage {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

type ResourceUsage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CpuPercent     float64                `protobuf:"fixed64,1,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	MemoryBytes    int64                  `protobuf:"varint,2,opt,name=memory_bytes,json=memoryBytes,proto3" json:"memory_bytes,omitempty"`
	NetworkRxBytes int64                  `protobuf:"varint,3,opt,name=network_rx_bytes,json=networkRxBytes,proto3" json:"network_rx_bytes,omitempty"`
	NetworkTxBytes int64                  `protobuf:"varint,4,opt,name=network_tx_bytes,json=networkTxBytes,proto3" json:"network_tx_bytes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_env_manager_v1_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{9}
}

func (x *ResourceUsage) GetCpuPercent() float64 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *ResourceUsage) GetMemoryBytes() int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

func (x *ResourceUsage) GetNetworkRxBytes() int64 {
	if x != nil {
		return x.NetworkRxBytes
	}
	return 0
}

func (x *ResourceUsage) GetNetworkTxBytes() int64 {
	if x != nil {
		return x.NetworkTxBytes
	}
	return 0
}

// Health streaming
type StreamHealthRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ServiceNames    []string               `protobuf:"bytes,1,rep,name=service_names,json=serviceNames,proto3" json:"service_names,omitempty"`           // empty = all services
	IntervalSeconds int32                  `protobuf:"varint,2,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"` // polling interval
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamHealthRequest) Reset() {
	*x = StreamHealthRequest{}
	mi := &file_env_manager_v1_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamHealthRequest) ProtoMessage() {}

func (x *StreamHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamHealthRequest.ProtoReflect.Descriptor instead.
func (*StreamHealthRequest) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{10}
}

func (x *StreamHealthRequest) GetServiceNames() []string {
	if x != nil {
		return x.ServiceNames
	}
	return nil
}

func (x *StreamHealthRequest) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

type HealthUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Healthy       bool                   `protobuf:"varint,2,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Details       map[string]string      `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthUpdate) Reset() {
	*x = HealthUpdate{}
	mi := &file_env_manager_v1_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthUpdate) ProtoMessage() {}

func (x *HealthUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthUpdate.ProtoReflect.Descriptor instead.
func (*HealthUpdate) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{11}
}

func (x *HealthUpdate) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *HealthUpdate) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthUpdate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthUpdate) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HealthUpdate) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// Resource availability
type GetResourceAvailabilityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkloadClass string                 `protobuf:"bytes,1,opt,name=workload_class,json=workloadClass,proto3" json:"workload_class,omitempty"` // cpu_short, cpu_long, gpu
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourceAvailabilityRequest) Reset() {
	*x = GetResourceAvailabilityRequest{}
	mi := &file_env_manager_v1_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourceAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceAvailabilityRequest) ProtoMessage() {}

func (x *GetResourceAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*GetResourceAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{12}
}

func (x *GetResourceAvailabilityRequest) GetWorkloadClass() string {
	if x != nil {
		return x.WorkloadClass
	}
	return ""
}

type ResourceAvailabilityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Available     bool                   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	Capacity      int32                  `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	InUse         int32                  `protobuf:"varint,3,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	Hardware      *HardwareInfo          `protobuf:"bytes,4,opt,name=hardware,proto3" json:"hardware,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceAvailabilityResponse) Reset() {
	*x = ResourceAvailabilityResponse{}
	mi := &file_env_manager_v1_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceAvailabilityResponse) ProtoMessage() {}

func (x *ResourceAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*ResourceAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{13}
}

func (x *ResourceAvailabilityResponse) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *ResourceAvailabilityResponse) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *ResourceAvailabilityResponse) GetInUse() int32 {
	if x != nil {
		return x.InUse
	}
	return 0
}

func (x *ResourceAvailabilityResponse) GetHardware() *HardwareInfo {
	if x != nil {
		return x.Hardware
	}
	return nil
}

type HardwareInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuCores      int32                  `protobuf:"varint,1,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	MemoryBytes   int64                  `protobuf:"varint,2,opt,name=memory_bytes,json=memoryBytes,proto3" json:"memory_bytes,omitempty"`
	Gpus          []*GPU                 `protobuf:"bytes,3,rep,name=gpus,proto3" json:"gpus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HardwareInfo) Reset() {
	*x = HardwareInfo{}
	mi := &file_env_manager_v1_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HardwareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareInfo) ProtoMessage() {}

func (x *HardwareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareInfo.ProtoReflect.Descriptor instead.
func (*HardwareInfo) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{14}
}

func (x *HardwareInfo) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *HardwareInfo) GetMemoryBytes() int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

func (x *HardwareInfo) GetGpus() []*GPU {
	if x != nil {
		return x.Gpus
	}
	return nil
}

type GPU struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Index              int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Name               string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MemoryBytes        int64                  `protobuf:"varint,3,opt,name=memory_bytes,json=memoryBytes,proto3" json:"memory_bytes,omitempty"`
	UtilizationPercent float64                `protobuf:"fixed64,4,opt,name=utilization_percent,json=utilizationPercent,proto3" json:"utilization_percent,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GPU) Reset() {
	*x = GPU{}
	mi := &file_env_manager_v1_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPU) ProtoMessage() {}

func (x *GPU) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPU.ProtoReflect.Descriptor instead.
func (*GPU) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{15}
}

func (x *GPU) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GPU) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GPU) GetMemoryBytes() int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

func (x *GPU) GetUtilizationPercent() float64 {
	if x != nil {
		return x.UtilizationPercent
	}
	return 0
}

// Task execution
type ExecuteTaskRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TaskId         string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	WorkloadClass  string                 `protobuf:"bytes,2,opt,name=workload_class,json=workloadClass,proto3" json:"workload_class,omitempty"`
	Payload        map[string]string      `protobuf:"bytes,3,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TimeoutSeconds int32                  `protobuf:"varint,4,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExecuteTaskRequest) Reset() {
	*x = ExecuteTaskRequest{}
	mi := &file_env_manager_v1_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTaskRequest) ProtoMessage() {}

func (x *ExecuteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTaskRequest.ProtoReflect.Descriptor instead.
func (*ExecuteTaskRequest) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{16}
}

func (x *ExecuteTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ExecuteTaskRequest) GetWorkloadClass() string {
	if x != nil {
		return x.WorkloadClass
	}
	return ""
}

func (x *ExecuteTaskRequest) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ExecuteTaskRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type ExecuteTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Result        map[string]string      `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	LatencyMs     float64                `protobuf:"fixed64,4,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteTaskResponse) Reset() {
	*x = ExecuteTaskResponse{}
	mi := &file_env_manager_v1_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTaskResponse) ProtoMessage() {}

func (x *ExecuteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTaskResponse.ProtoReflect.Descriptor instead.
func (*ExecuteTaskResponse) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{17}
}

func (x *ExecuteTaskResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExecuteTaskResponse) GetResult() map[string]string {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ExecuteTaskResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ExecuteTaskResponse) GetLatencyMs() float64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

// Image pulling
type PullImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageNames    []string               `protobuf:"bytes,1,rep,name=image_names,json=imageNames,proto3" json:"image_names,omitempty"` // empty = all required images
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullImagesRequest) Reset() {
	*x = PullImagesRequest{}
	mi := &file_env_manager_v1_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullImagesRequest) ProtoMessage() {}

func (x *PullImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullImagesRequest.ProtoReflect.Descriptor instead.
func (*PullImagesRequest) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{18}
}

func (x *PullImagesRequest) GetImageNames() []string {
	if x != nil {
		return x.ImageNames
	}
	return nil
}

type ImagePullProgress struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ImageName       string                 `protobuf:"bytes,1,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	Status          string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // downloading, extracting, complete, error
	Current         int64                  `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	Total           int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	ProgressPercent int32                  `protobuf:"varint,5,opt,name=progress_percent,json=progressPercent,proto3" json:"progress_percent,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ImagePullProgress) Reset() {
	*x = ImagePullProgress{}
	mi := &file_env_manager_v1_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagePullProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePullProgress) ProtoMessage() {}

func (x *ImagePullProgress) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePullProgress.ProtoReflect.Descriptor instead.
func (*ImagePullProgress) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{19}
}

func (x *ImagePullProgress) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ImagePullProgress) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ImagePullProgress) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ImagePullProgress) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ImagePullProgress) GetProgressPercent() int32 {
	if x != nil {
		return x.ProgressPercent
	}
	return 0
}

// Log streaming
type StreamLogsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServiceName    string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`           // required
	Follow         bool                   `protobuf:"varint,2,opt,name=follow,proto3" json:"follow,omitempty"`                                       // continue streaming new logs
	Tail           int32                  `protobuf:"varint,3,opt,name=tail,proto3" json:"tail,omitempty"`                                           // number of lines from end (0 = all)
	SinceTimestamp int64                  `protobuf:"varint,4,opt,name=since_timestamp,json=sinceTimestamp,proto3" json:"since_timestamp,omitempty"` // Unix timestamp to start from
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamLogsRequest) Reset() {
	*x = StreamLogsRequest{}
	mi := &file_env_manager_v1_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogsRequest) ProtoMessage() {}

func (x *StreamLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogsRequest.ProtoReflect.Descriptor instead.
func (*StreamLogsRequest) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{20}
}

func (x *StreamLogsRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *StreamLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *StreamLogsRequest) GetTail() int32 {
	if x != nil {
		return x.Tail
	}
	return 0
}

func (x *StreamLogsRequest) GetSinceTimestamp() int64 {
	if x != nil {
		return x.SinceTimestamp
	}
	return 0
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ContainerId   string                 `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Stream        string                 `protobuf:"bytes,3,opt,name=stream,proto3" json:"stream,omitempty"` // stdout or stderr
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_env_manager_v1_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_env_manager_v1_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_env_manager_v1_proto_rawDescGZIP(), []int{21}
}

func (x *LogEntry) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *LogEntry) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *LogEntry) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_env_manager_v1_proto protoreflect.FileDescriptor

const file_env_manager_v1_proto_rawDesc = "" +
	"\n" +
	"\x14env_manager.v1.proto\x12\x0eenv_manager.v1\"\xe8\x01\n" +
	"\x14StartServicesRequest\x12#\n" +
	"\rservice_names\x18\x01 \x03(\tR\fserviceNames\x12\x1a\n" +
	"\bparallel\x18\x02 \x01(\bR\bparallel\x12Q\n" +
	"\toverrides\x18\x03 \x03(\v23.env_manager.v1.StartServicesRequest.OverridesEntryR\toverrides\x1a<\n" +
	"\x0eOverridesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x86\x01\n" +
	"\x13ServiceStatusUpdate\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1a\n" +
	"\bprogress\x18\x04 \x01(\x05R\bprogress\"c\n" +
	"\x13StopServicesRequest\x12#\n" +
	"\rservice_names\x18\x01 \x03(\tR\fserviceNames\x12'\n" +
	"\x0ftimeout_seconds\x18\x02 \x01(\x05R\x0etimeoutSeconds\"\xd6\x01\n" +
	"\x14StopServicesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12a\n" +
	"\x0fservice_results\x18\x02 \x03(\v28.env_manager.v1.StopServicesResponse.ServiceResultsEntryR\x0eserviceResults\x1aA\n" +
	"\x13ServiceResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"c\n" +
	"\x15RestartServiceRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12'\n" +
	"\x0ftimeout_seconds\x18\x02 \x01(\x05R\x0etimeoutSeconds\"L\n" +
	"\x16RestartServiceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"?\n" +
	"\x18GetServicesStatusRequest\x12#\n" +
	"\rservice_names\x18\x01 \x03(\tR\fserviceNames\"\xc6\x01\n" +
	"\x16ServicesStatusResponse\x12P\n" +
	"\bservices\x18\x01 \x03(\v24.env_manager.v1.ServicesStatusResponse.ServicesEntryR\bservices\x1aZ\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.env_manager.v1.ServiceStatusR\x05value:\x028\x01\"\xf0\x02\n" +
	"\rServiceStatus\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12!\n" +
	"\fcontainer_id\x18\x03 \x01(\tR\vcontainerId\x12\x14\n" +
	"\x05ports\x18\x04 \x03(\x05R\x05ports\x12T\n" +
	"\rhealth_checks\x18\x05 \x03(\v2/.env_manager.v1.ServiceStatus.HealthChecksEntryR\fhealthChecks\x12\x1d\n" +
	"\n" +
	"started_at\x18\x06 \x01(\x03R\tstartedAt\x12D\n" +
	"\x0eresource_usage\x18\a \x01(\v2\x1d.env_manager.v1.ResourceUsageR\rresourceUsage\x1a?\n" +
	"\x11HealthChecksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa7\x01\n" +
	"\rResourceUsage\x12\x1f\n" +
	"\vcpu_percent\x18\x01 \x01(\x01R\n" +
	"cpuPercent\x12!\n" +
	"\fmemory_bytes\x18\x02 \x01(\x03R\vmemoryBytes\x12(\n" +
	"\x10network_rx_bytes\x18\x03 \x01(\x03R\x0enetworkRxBytes\x12(\n" +
	"\x10network_tx_bytes\x18\x04 \x01(\x03R\x0enetworkTxBytes\"e\n" +
	"\x13StreamHealthRequest\x12#\n" +
	"\rservice_names\x18\x01 \x03(\tR\fserviceNames\x12)\n" +
	"\x10interval_seconds\x18\x02 \x01(\x05R\x0fintervalSeconds\"\x84\x02\n" +
	"\fHealthUpdate\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x18\n" +
	"\ahealthy\x18\x02 \x01(\bR\ahealthy\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12C\n" +
	"\adetails\x18\x05 \x03(\v2).env_manager.v1.HealthUpdate.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"G\n" +
	"\x1eGetResourceAvailabilityRequest\x12%\n" +
	"\x0eworkload_class\x18\x01 \x01(\tR\rworkloadClass\"\xa9\x01\n" +
	"\x1cResourceAvailabilityResponse\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\x12\x1a\n" +
	"\bcapacity\x18\x02 \x01(\x05R\bcapacity\x12\x15\n" +
	"\x06in_use\x18\x03 \x01(\x05R\x05inUse\x128\n" +
	"\bhardware\x18\x04 \x01(\v2\x1c.env_manager.v1.HardwareInfoR\bhardware\"w\n" +
	"\fHardwareInfo\x12\x1b\n" +
	"\tcpu_cores\x18\x01 \x01(\x05R\bcpuCores\x12!\n" +
	"\fmemory_bytes\x18\x02 \x01(\x03R\vmemoryBytes\x12'\n" +
	"\x04gpus\x18\x03 \x03(\v2\x13.env_manager.v1.GPUR\x04gpus\"\x83\x01\n" +
	"\x03GPU\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fmemory_bytes\x18\x03 \x01(\x03R\vmemoryBytes\x12/\n" +
	"\x13utilization_percent\x18\x04 \x01(\x01R\x12utilizationPercent\"\x84\x02\n" +
	"\x12ExecuteTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12%\n" +
	"\x0eworkload_class\x18\x02 \x01(\tR\rworkloadClass\x12I\n" +
	"\apayload\x18\x03 \x03(\v2/.env_manager.v1.ExecuteTaskRequest.PayloadEntryR\apayload\x12'\n" +
	"\x0ftimeout_seconds\x18\x04 \x01(\x05R\x0etimeoutSeconds\x1a:\n" +
	"\fPayloadEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe8\x01\n" +
	"\x13ExecuteTaskResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12G\n" +
	"\x06result\x18\x02 \x03(\v2/.env_manager.v1.ExecuteTaskResponse.ResultEntryR\x06result\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x04 \x01(\x01R\tlatencyMs\x1a9\n" +
	"\vResultEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"4\n" +
	"\x11PullImagesRequest\x12\x1f\n" +
	"\vimage_names\x18\x01 \x03(\tR\n" +
	"imageNames\"\xa5\x01\n" +
	"\x11ImagePullProgress\x12\x1d\n" +
	"\n" +
	"image_name\x18\x01 \x01(\tR\timageName\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\acurrent\x18\x03 \x01(\x03R\acurrent\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x03R\x05total\x12)\n" +
	"\x10progress_percent\x18\x05 \x01(\x05R\x0fprogressPercent\"\x8b\x01\n" +
	"\x11StreamLogsRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x16\n" +
	"\x06follow\x18\x02 \x01(\bR\x06follow\x12\x12\n" +
	"\x04tail\x18\x03 \x01(\x05R\x04tail\x12'\n" +
	"\x0fsince_timestamp\x18\x04 \x01(\x03R\x0esinceTimestamp\"\xa0\x01\n" +
	"\bLogEntry\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12\x16\n" +
	"\x06stream\x18\x03 \x01(\tR\x06stream\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp2\xdd\x06\n" +
	"\x11EnvManagerService\x12\\\n" +
	"\rStartServices\x12$.env_manager.v1.StartServicesRequest\x1a#.env_manager.v1.ServiceStatusUpdate0\x01\x12Y\n" +
	"\fStopServices\x12#.env_manager.v1.StopServicesRequest\x1a$.env_manager.v1.StopServicesResponse\x12_\n" +
	"\x0eRestartService\x12%.env_manager.v1.RestartServiceRequest\x1a&.env_manager.v1.RestartServiceResponse\x12e\n" +
	"\x11GetServicesStatus\x12(.env_manager.v1.GetServicesStatusRequest\x1a&.env_manager.v1.ServicesStatusResponse\x12S\n" +
	"\fStreamHealth\x12#.env_manager.v1.StreamHealthRequest\x1a\x1c.env_manager.v1.HealthUpdate0\x01\x12w\n" +
	"\x17GetResourceAvailability\x12..env_manager.v1.GetResourceAvailabilityRequest\x1a,.env_manager.v1.ResourceAvailabilityResponse\x12V\n" +
	"\vExecuteTask\x12\".env_manager.v1.ExecuteTaskRequest\x1a#.env_manager.v1.ExecuteTaskResponse\x12T\n" +
	"\n" +
	"PullImages\x12!.env_manager.v1.PullImagesRequest\x1a!.env_manager.v1.ImagePullProgress0\x01\x12K\n" +
	"\n" +
	"StreamLogs\x12!.env_manager.v1.StreamLogsRequest\x1a\x18.env_manager.v1.LogEntry0\x01B\xb1\x01\n" +
	"\x12com.env_manager.v1B\x11EnvManagerV1ProtoP\x01Z3github.com/dspy/orchestrator/internal/pb/envmanager\xa2\x02\x03EXX\xaa\x02\rEnvManager.V1\xca\x02\rEnvManager\\V1\xe2\x02\x19EnvManager\\V1\\GPBMetadata\xea\x02\x0eEnvManager::V1b\x06proto3"

var (
	file_env_manager_v1_proto_rawDescOnce sync.Once
	file_env_manager_v1_proto_rawDescData []byte
)

func file_env_manager_v1_proto_rawDescGZIP() []byte {
	file_env_manager_v1_proto_rawDescOnce.Do(func() {
		file_env_manager_v1_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_env_manager_v1_proto_rawDesc), len(file_env_manager_v1_proto_rawDesc)))
	})
	return file_env_manager_v1_proto_rawDescData
}

var file_env_manager_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_env_manager_v1_proto_goTypes = []any{
	(*StartServicesRequest)(nil),           // 0: env_manager.v1.StartServicesRequest
	(*ServiceStatusUpdate)(nil),            // 1: env_manager.v1.ServiceStatusUpdate
	(*StopServicesRequest)(nil),            // 2: env_manager.v1.StopServicesRequest
	(*StopServicesResponse)(nil),           // 3: env_manager.v1.StopServicesResponse
	(*RestartServiceRequest)(nil),          // 4: env_manager.v1.RestartServiceRequest
	(*RestartServiceResponse)(nil),         // 5: env_manager.v1.RestartServiceResponse
	(*GetServicesStatusRequest)(nil),       // 6: env_manager.v1.GetServicesStatusRequest
	(*ServicesStatusResponse)(nil),         // 7: env_manager.v1.ServicesStatusResponse
	(*ServiceStatus)(nil),                  // 8: env_manager.v1.ServiceStatus
	(*ResourceUsage)(nil),                  // 9: env_manager.v1.ResourceUsage
	(*StreamHealthRequest)(nil),            // 10: env_manager.v1.StreamHealthRequest
	(*HealthUpdate)(nil),                   // 11: env_manager.v1.HealthUpdate
	(*GetResourceAvailabilityRequest)(nil), // 12: env_manager.v1.GetResourceAvailabilityRequest
	(*ResourceAvailabilityResponse)(nil),   // 13: env_manager.v1.ResourceAvailabilityResponse
	(*HardwareInfo)(nil),                   // 14: env_manager.v1.HardwareInfo
	(*GPU)(nil),                            // 15: env_manager.v1.GPU
	(*ExecuteTaskRequest)(nil),             // 16: env_manager.v1.ExecuteTaskRequest
	(*ExecuteTaskResponse)(nil),            // 17: env_manager.v1.ExecuteTaskResponse
	(*PullImagesRequest)(nil),              // 18: env_manager.v1.PullImagesRequest
	(*ImagePullProgress)(nil),              // 19: env_manager.v1.ImagePullProgress
	(*StreamLogsRequest)(nil),              // 20: env_manager.v1.StreamLogsRequest
	(*LogEntry)(nil),                       // 21: env_manager.v1.LogEntry
	nil,                                    // 22: env_manager.v1.StartServicesRequest.OverridesEntry
	nil,                                    // 23: env_manager.v1.StopServicesResponse.ServiceResultsEntry
	nil,                                    // 24: env_manager.v1.ServicesStatusResponse.ServicesEntry
	nil,                                    // 25: env_manager.v1.ServiceStatus.HealthChecksEntry
	nil,                                    // 26: env_manager.v1.HealthUpdate.DetailsEntry
	nil,                                    // 27: env_manager.v1.ExecuteTaskRequest.PayloadEntry
	nil,                                    // 28: env_manager.v1.ExecuteTaskResponse.ResultEntry
}
var file_env_manager_v1_proto_depIdxs = []int32{
	22, // 0: env_manager.v1.StartServicesRequest.overrides:type_name -> env_manager.v1.StartServicesRequest.OverridesEntry
	23, // 1: env_manager.v1.StopServicesResponse.service_results:type_name -> env_manager.v1.StopServicesResponse.ServiceResultsEntry
	24, // 2: env_manager.v1.ServicesStatusResponse.services:type_name -> env_manager.v1.ServicesStatusResponse.ServicesEntry
	25, // 3: env_manager.v1.ServiceStatus.health_checks:type_name -> env_manager.v1.ServiceStatus.HealthChecksEntry
	9,  // 4: env_manager.v1.ServiceStatus.resource_usage:type_name -> env_manager.v1.ResourceUsage
	26, // 5: env_manager.v1.HealthUpdate.details:type_name -> env_manager.v1.HealthUpdate.DetailsEntry
	14, // 6: env_manager.v1.ResourceAvailabilityResponse.hardware:type_name -> env_manager.v1.HardwareInfo
	15, // 7: env_manager.v1.HardwareInfo.gpus:type_name -> env_manager.v1.GPU
	27, // 8: env_manager.v1.ExecuteTaskRequest.payload:type_name -> env_manager.v1.ExecuteTaskRequest.PayloadEntry
	28, // 9: env_manager.v1.ExecuteTaskResponse.result:type_name -> env_manager.v1.ExecuteTaskResponse.ResultEntry
	8,  // 10: env_manager.v1.ServicesStatusResponse.ServicesEntry.value:type_name -> env_manager.v1.ServiceStatus
	0,  // 11: env_manager.v1.EnvManagerService.StartServices:input_type -> env_manager.v1.StartServicesRequest
	2,  // 12: env_manager.v1.EnvManagerService.StopServices:input_type -> env_manager.v1.StopServicesRequest
	4,  // 13: env_manager.v1.EnvManagerService.RestartService:input_type -> env_manager.v1.RestartServiceRequest
	6,  // 14: env_manager.v1.EnvManagerService.GetServicesStatus:input_type -> env_manager.v1.GetServicesStatusRequest
	10, // 15: env_manager.v1.EnvManagerService.StreamHealth:input_type -> env_manager.v1.StreamHealthRequest
	12, // 16: env_manager.v1.EnvManagerService.GetResourceAvailability:input_type -> env_manager.v1.GetResourceAvailabilityRequest
	16, // 17: env_manager.v1.EnvManagerService.ExecuteTask:input_type -> env_manager.v1.ExecuteTaskRequest
	18, // 18: env_manager.v1.EnvManagerService.PullImages:input_type -> env_manager.v1.PullImagesRequest
	20, // 19: env_manager.v1.EnvManagerService.StreamLogs:input_type -> env_manager.v1.StreamLogsRequest
	1,  // 20: env_manager.v1.EnvManagerService.StartServices:output_type -> env_manager.v1.ServiceStatusUpdate
	3,  // 21: env_manager.v1.EnvManagerService.StopServices:output_type -> env_manager.v1.StopServicesResponse
	5,  // 22: env_manager.v1.EnvManagerService.RestartService:output_type -> env_manager.v1.RestartServiceResponse
	7,  // 23: env_manager.v1.EnvManagerService.GetServicesStatus:output_type -> env_manager.v1.ServicesStatusResponse
	11, // 24: env_manager.v1.EnvManagerService.StreamHealth:output_type -> env_manager.v1.HealthUpdate
	13, // 25: env_manager.v1.EnvManagerService.GetResourceAvailability:output_type -> env_manager.v1.ResourceAvailabilityResponse
	17, // 26: env_manager.v1.EnvManagerService.ExecuteTask:output_type -> env_manager.v1.ExecuteTaskResponse
	19, // 27: env_manager.v1.EnvManagerService.PullImages:output_type -> env_manager.v1.ImagePullProgress
	21, // 28: env_manager.v1.EnvManagerService.StreamLogs:output_type -> env_manager.v1.LogEntry
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_env_manager_v1_proto_init() }
func file_env_manager_v1_proto_init() {
	if File_env_manager_v1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_env_manager_v1_proto_rawDesc), len(file_env_manager_v1_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_env_manager_v1_proto_goTypes,
		DependencyIndexes: file_env_manager_v1_proto_depIdxs,
		MessageInfos:      file_env_manager_v1_proto_msgTypes,
	}.Build()
	File_env_manager_v1_proto = out.File
	file_env_manager_v1_proto_goTypes = nil
	file_env_manager_v1_proto_depIdxs = nil
}
