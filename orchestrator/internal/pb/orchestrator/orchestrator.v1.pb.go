// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: orchestrator.v1.proto

package orchestrator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Task submission
type SubmitTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Class         string                 `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"` // cpu_short, cpu_long, gpu, gpu_slurm
	Payload       map[string]string      `protobuf:"bytes,3,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Priority      int32                  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,5,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskRequest) Reset() {
	*x = SubmitTaskRequest{}
	mi := &file_orchestrator_v1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskRequest) ProtoMessage() {}

func (x *SubmitTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskRequest.ProtoReflect.Descriptor instead.
func (*SubmitTaskRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubmitTaskRequest) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *SubmitTaskRequest) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SubmitTaskRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *SubmitTaskRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type SubmitTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TaskId        string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskResponse) Reset() {
	*x = SubmitTaskResponse{}
	mi := &file_orchestrator_v1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskResponse) ProtoMessage() {}

func (x *SubmitTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskResponse.ProtoReflect.Descriptor instead.
func (*SubmitTaskResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitTaskResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitTaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *SubmitTaskResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Task results streaming
type StreamTaskResultsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TaskIds          []string               `protobuf:"bytes,1,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"` // empty = all tasks
	IncludeCompleted bool                   `protobuf:"varint,2,opt,name=include_completed,json=includeCompleted,proto3" json:"include_completed,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StreamTaskResultsRequest) Reset() {
	*x = StreamTaskResultsRequest{}
	mi := &file_orchestrator_v1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTaskResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTaskResultsRequest) ProtoMessage() {}

func (x *StreamTaskResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTaskResultsRequest.ProtoReflect.Descriptor instead.
func (*StreamTaskResultsRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{2}
}

func (x *StreamTaskResultsRequest) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

func (x *StreamTaskResultsRequest) GetIncludeCompleted() bool {
	if x != nil {
		return x.IncludeCompleted
	}
	return false
}

type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // pending, running, completed, failed
	Result        map[string]string      `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	DurationMs    float64                `protobuf:"fixed64,5,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	CompletedAt   int64                  `protobuf:"varint,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_orchestrator_v1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{3}
}

func (x *TaskResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskResult) GetResult() map[string]string {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TaskResult) GetDurationMs() float64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *TaskResult) GetCompletedAt() int64 {
	if x != nil {
		return x.CompletedAt
	}
	return 0
}

// Workflow management
type CreateWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Spec          []byte                 `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"` // JSON workflow specification
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkflowRequest) Reset() {
	*x = CreateWorkflowRequest{}
	mi := &file_orchestrator_v1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowRequest) ProtoMessage() {}

func (x *CreateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{4}
}

func (x *CreateWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateWorkflowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWorkflowRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateWorkflowRequest) GetSpec() []byte {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkflowResponse) Reset() {
	*x = CreateWorkflowResponse{}
	mi := &file_orchestrator_v1_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowResponse) ProtoMessage() {}

func (x *CreateWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{5}
}

func (x *CreateWorkflowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateWorkflowResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *CreateWorkflowResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StartWorkflowRunRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId     string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,2,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	Input          map[string]string      `protobuf:"bytes,3,rep,name=input,proto3" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StartWorkflowRunRequest) Reset() {
	*x = StartWorkflowRunRequest{}
	mi := &file_orchestrator_v1_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorkflowRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkflowRunRequest) ProtoMessage() {}

func (x *StartWorkflowRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkflowRunRequest.ProtoReflect.Descriptor instead.
func (*StartWorkflowRunRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{6}
}

func (x *StartWorkflowRunRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *StartWorkflowRunRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *StartWorkflowRunRequest) GetInput() map[string]string {
	if x != nil {
		return x.Input
	}
	return nil
}

type StartWorkflowRunResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RunId         string                 `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartWorkflowRunResponse) Reset() {
	*x = StartWorkflowRunResponse{}
	mi := &file_orchestrator_v1_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorkflowRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkflowRunResponse) ProtoMessage() {}

func (x *StartWorkflowRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkflowRunResponse.ProtoReflect.Descriptor instead.
func (*StartWorkflowRunResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{7}
}

func (x *StartWorkflowRunResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartWorkflowRunResponse) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *StartWorkflowRunResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StreamWorkflowStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamWorkflowStatusRequest) Reset() {
	*x = StreamWorkflowStatusRequest{}
	mi := &file_orchestrator_v1_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamWorkflowStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWorkflowStatusRequest) ProtoMessage() {}

func (x *StreamWorkflowStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWorkflowStatusRequest.ProtoReflect.Descriptor instead.
func (*StreamWorkflowStatusRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{8}
}

func (x *StreamWorkflowStatusRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type WorkflowStatusUpdate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RunId          string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Status         string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // pending, running, completed, failed
	CurrentStep    string                 `protobuf:"bytes,3,opt,name=current_step,json=currentStep,proto3" json:"current_step,omitempty"`
	StepsCompleted int32                  `protobuf:"varint,4,opt,name=steps_completed,json=stepsCompleted,proto3" json:"steps_completed,omitempty"`
	TotalSteps     int32                  `protobuf:"varint,5,opt,name=total_steps,json=totalSteps,proto3" json:"total_steps,omitempty"`
	Output         map[string]string      `protobuf:"bytes,6,rep,name=output,proto3" json:"output,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Error          string                 `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorkflowStatusUpdate) Reset() {
	*x = WorkflowStatusUpdate{}
	mi := &file_orchestrator_v1_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowStatusUpdate) ProtoMessage() {}

func (x *WorkflowStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowStatusUpdate.ProtoReflect.Descriptor instead.
func (*WorkflowStatusUpdate) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{9}
}

func (x *WorkflowStatusUpdate) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *WorkflowStatusUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkflowStatusUpdate) GetCurrentStep() string {
	if x != nil {
		return x.CurrentStep
	}
	return ""
}

func (x *WorkflowStatusUpdate) GetStepsCompleted() int32 {
	if x != nil {
		return x.StepsCompleted
	}
	return 0
}

func (x *WorkflowStatusUpdate) GetTotalSteps() int32 {
	if x != nil {
		return x.TotalSteps
	}
	return 0
}

func (x *WorkflowStatusUpdate) GetOutput() map[string]string {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *WorkflowStatusUpdate) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Metrics
type GetMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetricNames   []string               `protobuf:"bytes,1,rep,name=metric_names,json=metricNames,proto3" json:"metric_names,omitempty"` // empty = all metrics
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsRequest) Reset() {
	*x = GetMetricsRequest{}
	mi := &file_orchestrator_v1_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsRequest) ProtoMessage() {}

func (x *GetMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{10}
}

func (x *GetMetricsRequest) GetMetricNames() []string {
	if x != nil {
		return x.MetricNames
	}
	return nil
}

type MetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       map[string]float64     `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsResponse) Reset() {
	*x = MetricsResponse{}
	mi := &file_orchestrator_v1_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsResponse) ProtoMessage() {}

func (x *MetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsResponse.ProtoReflect.Descriptor instead.
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{11}
}

func (x *MetricsResponse) GetMetrics() map[string]float64 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *MetricsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Event streaming
type StreamEventsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EventTypes     []string               `protobuf:"bytes,1,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"` // empty = all events
	SinceTimestamp int64                  `protobuf:"varint,2,opt,name=since_timestamp,json=sinceTimestamp,proto3" json:"since_timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamEventsRequest) Reset() {
	*x = StreamEventsRequest{}
	mi := &file_orchestrator_v1_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsRequest) ProtoMessage() {}

func (x *StreamEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamEventsRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{12}
}

func (x *StreamEventsRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *StreamEventsRequest) GetSinceTimestamp() int64 {
	if x != nil {
		return x.SinceTimestamp
	}
	return 0
}

type SystemEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`    // task_submitted, task_completed, task_failed, workflow_started, etc.
	ResourceId    string                 `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"` // task_id, workflow_id, etc.
	Data          map[string]string      `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemEvent) Reset() {
	*x = SystemEvent{}
	mi := &file_orchestrator_v1_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent) ProtoMessage() {}

func (x *SystemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent.ProtoReflect.Descriptor instead.
func (*SystemEvent) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{13}
}

func (x *SystemEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *SystemEvent) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *SystemEvent) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SystemEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Health
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_orchestrator_v1_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{14}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Services      map[string]string      `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // service_name -> status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_orchestrator_v1_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_proto_rawDescGZIP(), []int{15}
}

func (x *HealthResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthResponse) GetServices() map[string]string {
	if x != nil {
		return x.Services
	}
	return nil
}

var File_orchestrator_v1_proto protoreflect.FileDescriptor

const file_orchestrator_v1_proto_rawDesc = "" +
	"\n" +
	"\x15orchestrator.v1.proto\x12\x0forchestrator.v1\"\xfd\x01\n" +
	"\x11SubmitTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05class\x18\x02 \x01(\tR\x05class\x12I\n" +
	"\apayload\x18\x03 \x03(\v2/.orchestrator.v1.SubmitTaskRequest.PayloadEntryR\apayload\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x05R\bpriority\x12\x1f\n" +
	"\vworkflow_id\x18\x05 \x01(\tR\n" +
	"workflowId\x1a:\n" +
	"\fPayloadEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"]\n" +
	"\x12SubmitTaskResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"b\n" +
	"\x18StreamTaskResultsRequest\x12\x19\n" +
	"\btask_ids\x18\x01 \x03(\tR\ataskIds\x12+\n" +
	"\x11include_completed\x18\x02 \x01(\bR\x10includeCompleted\"\x93\x02\n" +
	"\n" +
	"TaskResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12?\n" +
	"\x06result\x18\x03 \x03(\v2'.orchestrator.v1.TaskResult.ResultEntryR\x06result\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\x12\x1f\n" +
	"\vduration_ms\x18\x05 \x01(\x01R\n" +
	"durationMs\x12!\n" +
	"\fcompleted_at\x18\x06 \x01(\x03R\vcompletedAt\x1a9\n" +
	"\vResultEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"q\n" +
	"\x15CreateWorkflowRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x12\n" +
	"\x04spec\x18\x04 \x01(\fR\x04spec\"i\n" +
	"\x16CreateWorkflowResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\xe8\x01\n" +
	"\x17StartWorkflowRunRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12'\n" +
	"\x0fidempotency_key\x18\x02 \x01(\tR\x0eidempotencyKey\x12I\n" +
	"\x05input\x18\x03 \x03(\v23.orchestrator.v1.StartWorkflowRunRequest.InputEntryR\x05input\x1a8\n" +
	"\n" +
	"InputEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"a\n" +
	"\x18StartWorkflowRunResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x15\n" +
	"\x06run_id\x18\x02 \x01(\tR\x05runId\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"4\n" +
	"\x1bStreamWorkflowStatusRequest\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\"\xce\x02\n" +
	"\x14WorkflowStatusUpdate\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12!\n" +
	"\fcurrent_step\x18\x03 \x01(\tR\vcurrentStep\x12'\n" +
	"\x0fsteps_completed\x18\x04 \x01(\x05R\x0estepsCompleted\x12\x1f\n" +
	"\vtotal_steps\x18\x05 \x01(\x05R\n" +
	"totalSteps\x12I\n" +
	"\x06output\x18\x06 \x03(\v21.orchestrator.v1.WorkflowStatusUpdate.OutputEntryR\x06output\x12\x14\n" +
	"\x05error\x18\a \x01(\tR\x05error\x1a9\n" +
	"\vOutputEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"6\n" +
	"\x11GetMetricsRequest\x12!\n" +
	"\fmetric_names\x18\x01 \x03(\tR\vmetricNames\"\xb4\x01\n" +
	"\x0fMetricsResponse\x12G\n" +
	"\ametrics\x18\x01 \x03(\v2-.orchestrator.v1.MetricsResponse.MetricsEntryR\ametrics\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"_\n" +
	"\x13StreamEventsRequest\x12\x1f\n" +
	"\vevent_types\x18\x01 \x03(\tR\n" +
	"eventTypes\x12'\n" +
	"\x0fsince_timestamp\x18\x02 \x01(\x03R\x0esinceTimestamp\"\xe0\x01\n" +
	"\vSystemEvent\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x1f\n" +
	"\vresource_id\x18\x02 \x01(\tR\n" +
	"resourceId\x12:\n" +
	"\x04data\x18\x03 \x03(\v2&.orchestrator.v1.SystemEvent.DataEntryR\x04data\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x0f\n" +
	"\rHealthRequest\"\xcc\x01\n" +
	"\x0eHealthResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12I\n" +
	"\bservices\x18\x03 \x03(\v2-.orchestrator.v1.HealthResponse.ServicesEntryR\bservices\x1a;\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xfb\x05\n" +
	"\x13OrchestratorService\x12U\n" +
	"\n" +
	"SubmitTask\x12\".orchestrator.v1.SubmitTaskRequest\x1a#.orchestrator.v1.SubmitTaskResponse\x12]\n" +
	"\x11StreamTaskResults\x12).orchestrator.v1.StreamTaskResultsRequest\x1a\x1b.orchestrator.v1.TaskResult0\x01\x12a\n" +
	"\x0eCreateWorkflow\x12&.orchestrator.v1.CreateWorkflowRequest\x1a'.orchestrator.v1.CreateWorkflowResponse\x12g\n" +
	"\x10StartWorkflowRun\x12(.orchestrator.v1.StartWorkflowRunRequest\x1a).orchestrator.v1.StartWorkflowRunResponse\x12m\n" +
	"\x14StreamWorkflowStatus\x12,.orchestrator.v1.StreamWorkflowStatusRequest\x1a%.orchestrator.v1.WorkflowStatusUpdate0\x01\x12R\n" +
	"\n" +
	"GetMetrics\x12\".orchestrator.v1.GetMetricsRequest\x1a .orchestrator.v1.MetricsResponse\x12T\n" +
	"\fStreamEvents\x12$.orchestrator.v1.StreamEventsRequest\x1a\x1c.orchestrator.v1.SystemEvent0\x01\x12I\n" +
	"\x06Health\x12\x1e.orchestrator.v1.HealthRequest\x1a\x1f.orchestrator.v1.HealthResponseB\xbe\x01\n" +
	"\x13com.orchestrator.v1B\x13OrchestratorV1ProtoP\x01Z5github.com/dspy/orchestrator/internal/pb/orchestrator\xa2\x02\x03OXX\xaa\x02\x0fOrchestrator.V1\xca\x02\x0fOrchestrator\\V1\xe2\x02\x1bOrchestrator\\V1\\GPBMetadata\xea\x02\x10Orchestrator::V1b\x06proto3"

var (
	file_orchestrator_v1_proto_rawDescOnce sync.Once
	file_orchestrator_v1_proto_rawDescData []byte
)

func file_orchestrator_v1_proto_rawDescGZIP() []byte {
	file_orchestrator_v1_proto_rawDescOnce.Do(func() {
		file_orchestrator_v1_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_orchestrator_v1_proto_rawDesc), len(file_orchestrator_v1_proto_rawDesc)))
	})
	return file_orchestrator_v1_proto_rawDescData
}

var file_orchestrator_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_orchestrator_v1_proto_goTypes = []any{
	(*SubmitTaskRequest)(nil),           // 0: orchestrator.v1.SubmitTaskRequest
	(*SubmitTaskResponse)(nil),          // 1: orchestrator.v1.SubmitTaskResponse
	(*StreamTaskResultsRequest)(nil),    // 2: orchestrator.v1.StreamTaskResultsRequest
	(*TaskResult)(nil),                  // 3: orchestrator.v1.TaskResult
	(*CreateWorkflowRequest)(nil),       // 4: orchestrator.v1.CreateWorkflowRequest
	(*CreateWorkflowResponse)(nil),      // 5: orchestrator.v1.CreateWorkflowResponse
	(*StartWorkflowRunRequest)(nil),     // 6: orchestrator.v1.StartWorkflowRunRequest
	(*StartWorkflowRunResponse)(nil),    // 7: orchestrator.v1.StartWorkflowRunResponse
	(*StreamWorkflowStatusRequest)(nil), // 8: orchestrator.v1.StreamWorkflowStatusRequest
	(*WorkflowStatusUpdate)(nil),        // 9: orchestrator.v1.WorkflowStatusUpdate
	(*GetMetricsRequest)(nil),           // 10: orchestrator.v1.GetMetricsRequest
	(*MetricsResponse)(nil),             // 11: orchestrator.v1.MetricsResponse
	(*StreamEventsRequest)(nil),         // 12: orchestrator.v1.StreamEventsRequest
	(*SystemEvent)(nil),                 // 13: orchestrator.v1.SystemEvent
	(*HealthRequest)(nil),               // 14: orchestrator.v1.HealthRequest
	(*HealthResponse)(nil),              // 15: orchestrator.v1.HealthResponse
	nil,                                 // 16: orchestrator.v1.SubmitTaskRequest.PayloadEntry
	nil,                                 // 17: orchestrator.v1.TaskResult.ResultEntry
	nil,                                 // 18: orchestrator.v1.StartWorkflowRunRequest.InputEntry
	nil,                                 // 19: orchestrator.v1.WorkflowStatusUpdate.OutputEntry
	nil,                                 // 20: orchestrator.v1.MetricsResponse.MetricsEntry
	nil,                                 // 21: orchestrator.v1.SystemEvent.DataEntry
	nil,                                 // 22: orchestrator.v1.HealthResponse.ServicesEntry
}
var file_orchestrator_v1_proto_depIdxs = []int32{
	16, // 0: orchestrator.v1.SubmitTaskRequest.payload:type_name -> orchestrator.v1.SubmitTaskRequest.PayloadEntry
	17, // 1: orchestrator.v1.TaskResult.result:type_name -> orchestrator.v1.TaskResult.ResultEntry
	18, // 2: orchestrator.v1.StartWorkflowRunRequest.input:type_name -> orchestrator.v1.StartWorkflowRunRequest.InputEntry
	19, // 3: orchestrator.v1.WorkflowStatusUpdate.output:type_name -> orchestrator.v1.WorkflowStatusUpdate.OutputEntry
	20, // 4: orchestrator.v1.MetricsResponse.metrics:type_name -> orchestrator.v1.MetricsResponse.MetricsEntry
	21, // 5: orchestrator.v1.SystemEvent.data:type_name -> orchestrator.v1.SystemEvent.DataEntry
	22, // 6: orchestrator.v1.HealthResponse.services:type_name -> orchestrator.v1.HealthResponse.ServicesEntry
	0,  // 7: orchestrator.v1.OrchestratorService.SubmitTask:input_type -> orchestrator.v1.SubmitTaskRequest
	2,  // 8: orchestrator.v1.OrchestratorService.StreamTaskResults:input_type -> orchestrator.v1.StreamTaskResultsRequest
	4,  // 9: orchestrator.v1.OrchestratorService.CreateWorkflow:input_type -> orchestrator.v1.CreateWorkflowRequest
	6,  // 10: orchestrator.v1.OrchestratorService.StartWorkflowRun:input_type -> orchestrator.v1.StartWorkflowRunRequest
	8,  // 11: orchestrator.v1.OrchestratorService.StreamWorkflowStatus:input_type -> orchestrator.v1.StreamWorkflowStatusRequest
	10, // 12: orchestrator.v1.OrchestratorService.GetMetrics:input_type -> orchestrator.v1.GetMetricsRequest
	12, // 13: orchestrator.v1.OrchestratorService.StreamEvents:input_type -> orchestrator.v1.StreamEventsRequest
	14, // 14: orchestrator.v1.OrchestratorService.Health:input_type -> orchestrator.v1.HealthRequest
	1,  // 15: orchestrator.v1.OrchestratorService.SubmitTask:output_type -> orchestrator.v1.SubmitTaskResponse
	3,  // 16: orchestrator.v1.OrchestratorService.StreamTaskResults:output_type -> orchestrator.v1.TaskResult
	5,  // 17: orchestrator.v1.OrchestratorService.CreateWorkflow:output_type -> orchestrator.v1.CreateWorkflowResponse
	7,  // 18: orchestrator.v1.OrchestratorService.StartWorkflowRun:output_type -> orchestrator.v1.StartWorkflowRunResponse
	9,  // 19: orchestrator.v1.OrchestratorService.StreamWorkflowStatus:output_type -> orchestrator.v1.WorkflowStatusUpdate
	11, // 20: orchestrator.v1.OrchestratorService.GetMetrics:output_type -> orchestrator.v1.MetricsResponse
	13, // 21: orchestrator.v1.OrchestratorService.StreamEvents:output_type -> orchestrator.v1.SystemEvent
	15, // 22: orchestrator.v1.OrchestratorService.Health:output_type -> orchestrator.v1.HealthResponse
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_orchestrator_v1_proto_init() }
func file_orchestrator_v1_proto_init() {
	if File_orchestrator_v1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orchestrator_v1_proto_rawDesc), len(file_orchestrator_v1_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orchestrator_v1_proto_goTypes,
		DependencyIndexes: file_orchestrator_v1_proto_depIdxs,
		MessageInfos:      file_orchestrator_v1_proto_msgTypes,
	}.Build()
	File_orchestrator_v1_proto = out.File
	file_orchestrator_v1_proto_goTypes = nil
	file_orchestrator_v1_proto_depIdxs = nil
}
