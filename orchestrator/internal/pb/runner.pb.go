// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: runner.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceHints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuMillicores uint32                 `protobuf:"varint,1,opt,name=cpu_millicores,json=cpuMillicores,proto3" json:"cpu_millicores,omitempty"`
	MemBytes      uint64                 `protobuf:"varint,2,opt,name=mem_bytes,json=memBytes,proto3" json:"mem_bytes,omitempty"`
	GpuCount      uint32                 `protobuf:"varint,3,opt,name=gpu_count,json=gpuCount,proto3" json:"gpu_count,omitempty"`
	GpuClass      string                 `protobuf:"bytes,4,opt,name=gpu_class,json=gpuClass,proto3" json:"gpu_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceHints) Reset() {
	*x = ResourceHints{}
	mi := &file_runner_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceHints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceHints) ProtoMessage() {}

func (x *ResourceHints) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceHints.ProtoReflect.Descriptor instead.
func (*ResourceHints) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceHints) GetCpuMillicores() uint32 {
	if x != nil {
		return x.CpuMillicores
	}
	return 0
}

func (x *ResourceHints) GetMemBytes() uint64 {
	if x != nil {
		return x.MemBytes
	}
	return 0
}

func (x *ResourceHints) GetGpuCount() uint32 {
	if x != nil {
		return x.GpuCount
	}
	return 0
}

func (x *ResourceHints) GetGpuClass() string {
	if x != nil {
		return x.GpuClass
	}
	return ""
}

type Mount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostPath      string                 `protobuf:"bytes,1,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	MountPath     string                 `protobuf:"bytes,2,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mount) Reset() {
	*x = Mount{}
	mi := &file_runner_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mount) ProtoMessage() {}

func (x *Mount) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mount.ProtoReflect.Descriptor instead.
func (*Mount) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{1}
}

func (x *Mount) GetHostPath() string {
	if x != nil {
		return x.HostPath
	}
	return ""
}

func (x *Mount) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *Mount) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

type RunEnv struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OciImage      string                 `protobuf:"bytes,1,opt,name=oci_image,json=ociImage,proto3" json:"oci_image,omitempty"`
	Argv          []string               `protobuf:"bytes,2,rep,name=argv,proto3" json:"argv,omitempty"`
	Env           map[string]string      `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Mounts        []*Mount               `protobuf:"bytes,4,rep,name=mounts,proto3" json:"mounts,omitempty"`
	HardTimeoutMs uint64                 `protobuf:"varint,5,opt,name=hard_timeout_ms,json=hardTimeoutMs,proto3" json:"hard_timeout_ms,omitempty"`
	Resources     *ResourceHints         `protobuf:"bytes,6,opt,name=resources,proto3" json:"resources,omitempty"`
	ContentDigest string                 `protobuf:"bytes,7,opt,name=content_digest,json=contentDigest,proto3" json:"content_digest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunEnv) Reset() {
	*x = RunEnv{}
	mi := &file_runner_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunEnv) ProtoMessage() {}

func (x *RunEnv) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunEnv.ProtoReflect.Descriptor instead.
func (*RunEnv) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{2}
}

func (x *RunEnv) GetOciImage() string {
	if x != nil {
		return x.OciImage
	}
	return ""
}

func (x *RunEnv) GetArgv() []string {
	if x != nil {
		return x.Argv
	}
	return nil
}

func (x *RunEnv) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *RunEnv) GetMounts() []*Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

func (x *RunEnv) GetHardTimeoutMs() uint64 {
	if x != nil {
		return x.HardTimeoutMs
	}
	return 0
}

func (x *RunEnv) GetResources() *ResourceHints {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *RunEnv) GetContentDigest() string {
	if x != nil {
		return x.ContentDigest
	}
	return ""
}

type TensorMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Shape         []int64                `protobuf:"varint,2,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Dtype         string                 `protobuf:"bytes,3,opt,name=dtype,proto3" json:"dtype,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TensorMeta) Reset() {
	*x = TensorMeta{}
	mi := &file_runner_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TensorMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TensorMeta) ProtoMessage() {}

func (x *TensorMeta) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TensorMeta.ProtoReflect.Descriptor instead.
func (*TensorMeta) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{3}
}

func (x *TensorMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TensorMeta) GetShape() []int64 {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *TensorMeta) GetDtype() string {
	if x != nil {
		return x.Dtype
	}
	return ""
}

type RunRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	RunId         string                 `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Env           *RunEnv                `protobuf:"bytes,3,opt,name=env,proto3" json:"env,omitempty"`
	Inputs        []*TensorMeta          `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	mi := &file_runner_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{4}
}

func (x *RunRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *RunRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *RunRequest) GetEnv() *RunEnv {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *RunRequest) GetInputs() []*TensorMeta {
	if x != nil {
		return x.Inputs
	}
	return nil
}

type LogLine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            string                 `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Level         string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	Msg           string                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogLine) Reset() {
	*x = LogLine{}
	mi := &file_runner_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLine) ProtoMessage() {}

func (x *LogLine) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLine.ProtoReflect.Descriptor instead.
func (*LogLine) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{5}
}

func (x *LogLine) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *LogLine) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogLine) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RunResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExitCode      int32                  `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Logs          []*LogLine             `protobuf:"bytes,2,rep,name=logs,proto3" json:"logs,omitempty"`
	Outputs       []*TensorMeta          `protobuf:"bytes,3,rep,name=outputs,proto3" json:"outputs,omitempty"`
	CacheKey      string                 `protobuf:"bytes,4,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunResult) Reset() {
	*x = RunResult{}
	mi := &file_runner_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResult) ProtoMessage() {}

func (x *RunResult) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResult.ProtoReflect.Descriptor instead.
func (*RunResult) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{6}
}

func (x *RunResult) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *RunResult) GetLogs() []*LogLine {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *RunResult) GetOutputs() []*TensorMeta {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *RunResult) GetCacheKey() string {
	if x != nil {
		return x.CacheKey
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_runner_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{7}
}

type CreditReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Credits       uint32                 `protobuf:"varint,2,opt,name=credits,proto3" json:"credits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditReport) Reset() {
	*x = CreditReport{}
	mi := &file_runner_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditReport) ProtoMessage() {}

func (x *CreditReport) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditReport.ProtoReflect.Descriptor instead.
func (*CreditReport) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{8}
}

func (x *CreditReport) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *CreditReport) GetCredits() uint32 {
	if x != nil {
		return x.Credits
	}
	return 0
}

type WorkerHello struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	MaxInflight   uint32                 `protobuf:"varint,2,opt,name=max_inflight,json=maxInflight,proto3" json:"max_inflight,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	MeshEnabled   bool                   `protobuf:"varint,4,opt,name=mesh_enabled,json=meshEnabled,proto3" json:"mesh_enabled,omitempty"`
	MeshNodeId    uint64                 `protobuf:"varint,5,opt,name=mesh_node_id,json=meshNodeId,proto3" json:"mesh_node_id,omitempty"`
	MeshDomain    string                 `protobuf:"bytes,6,opt,name=mesh_domain,json=meshDomain,proto3" json:"mesh_domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerHello) Reset() {
	*x = WorkerHello{}
	mi := &file_runner_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerHello) ProtoMessage() {}

func (x *WorkerHello) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerHello.ProtoReflect.Descriptor instead.
func (*WorkerHello) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{9}
}

func (x *WorkerHello) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerHello) GetMaxInflight() uint32 {
	if x != nil {
		return x.MaxInflight
	}
	return 0
}

func (x *WorkerHello) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WorkerHello) GetMeshEnabled() bool {
	if x != nil {
		return x.MeshEnabled
	}
	return false
}

func (x *WorkerHello) GetMeshNodeId() uint64 {
	if x != nil {
		return x.MeshNodeId
	}
	return 0
}

func (x *WorkerHello) GetMeshDomain() string {
	if x != nil {
		return x.MeshDomain
	}
	return ""
}

type TaskAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskAck) Reset() {
	*x = TaskAck{}
	mi := &file_runner_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAck) ProtoMessage() {}

func (x *TaskAck) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAck.ProtoReflect.Descriptor instead.
func (*TaskAck) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{10}
}

func (x *TaskAck) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskAck) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TaskAssignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Tenant        string                 `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Topic         string                 `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Offset        int64                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Partition     string                 `protobuf:"bytes,6,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskAssignment) Reset() {
	*x = TaskAssignment{}
	mi := &file_runner_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAssignment) ProtoMessage() {}

func (x *TaskAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAssignment.ProtoReflect.Descriptor instead.
func (*TaskAssignment) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{11}
}

func (x *TaskAssignment) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskAssignment) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *TaskAssignment) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *TaskAssignment) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TaskAssignment) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TaskAssignment) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

type WorkerHeartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Processed     uint64                 `protobuf:"varint,2,opt,name=processed,proto3" json:"processed,omitempty"`
	Failed        uint64                 `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerHeartbeat) Reset() {
	*x = WorkerHeartbeat{}
	mi := &file_runner_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerHeartbeat) ProtoMessage() {}

func (x *WorkerHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerHeartbeat.ProtoReflect.Descriptor instead.
func (*WorkerHeartbeat) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{12}
}

func (x *WorkerHeartbeat) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerHeartbeat) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *WorkerHeartbeat) GetFailed() uint64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

type WorkerToSupervisor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*WorkerToSupervisor_Hello
	//	*WorkerToSupervisor_Credit
	//	*WorkerToSupervisor_Ack
	//	*WorkerToSupervisor_Heartbeat
	Msg           isWorkerToSupervisor_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerToSupervisor) Reset() {
	*x = WorkerToSupervisor{}
	mi := &file_runner_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerToSupervisor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerToSupervisor) ProtoMessage() {}

func (x *WorkerToSupervisor) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerToSupervisor.ProtoReflect.Descriptor instead.
func (*WorkerToSupervisor) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{13}
}

func (x *WorkerToSupervisor) GetMsg() isWorkerToSupervisor_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *WorkerToSupervisor) GetHello() *WorkerHello {
	if x != nil {
		if x, ok := x.Msg.(*WorkerToSupervisor_Hello); ok {
			return x.Hello
		}
	}
	return nil
}

func (x *WorkerToSupervisor) GetCredit() *CreditReport {
	if x != nil {
		if x, ok := x.Msg.(*WorkerToSupervisor_Credit); ok {
			return x.Credit
		}
	}
	return nil
}

func (x *WorkerToSupervisor) GetAck() *TaskAck {
	if x != nil {
		if x, ok := x.Msg.(*WorkerToSupervisor_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *WorkerToSupervisor) GetHeartbeat() *WorkerHeartbeat {
	if x != nil {
		if x, ok := x.Msg.(*WorkerToSupervisor_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

type isWorkerToSupervisor_Msg interface {
	isWorkerToSupervisor_Msg()
}

type WorkerToSupervisor_Hello struct {
	Hello *WorkerHello `protobuf:"bytes,1,opt,name=hello,proto3,oneof"`
}

type WorkerToSupervisor_Credit struct {
	Credit *CreditReport `protobuf:"bytes,2,opt,name=credit,proto3,oneof"`
}

type WorkerToSupervisor_Ack struct {
	Ack *TaskAck `protobuf:"bytes,3,opt,name=ack,proto3,oneof"`
}

type WorkerToSupervisor_Heartbeat struct {
	Heartbeat *WorkerHeartbeat `protobuf:"bytes,4,opt,name=heartbeat,proto3,oneof"`
}

func (*WorkerToSupervisor_Hello) isWorkerToSupervisor_Msg() {}

func (*WorkerToSupervisor_Credit) isWorkerToSupervisor_Msg() {}

func (*WorkerToSupervisor_Ack) isWorkerToSupervisor_Msg() {}

func (*WorkerToSupervisor_Heartbeat) isWorkerToSupervisor_Msg() {}

type SupervisorToWorker struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*SupervisorToWorker_Assignment
	Msg           isSupervisorToWorker_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupervisorToWorker) Reset() {
	*x = SupervisorToWorker{}
	mi := &file_runner_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupervisorToWorker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupervisorToWorker) ProtoMessage() {}

func (x *SupervisorToWorker) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupervisorToWorker.ProtoReflect.Descriptor instead.
func (*SupervisorToWorker) Descriptor() ([]byte, []int) {
	return file_runner_proto_rawDescGZIP(), []int{14}
}

func (x *SupervisorToWorker) GetMsg() isSupervisorToWorker_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *SupervisorToWorker) GetAssignment() *TaskAssignment {
	if x != nil {
		if x, ok := x.Msg.(*SupervisorToWorker_Assignment); ok {
			return x.Assignment
		}
	}
	return nil
}

type isSupervisorToWorker_Msg interface {
	isSupervisorToWorker_Msg()
}

type SupervisorToWorker_Assignment struct {
	Assignment *TaskAssignment `protobuf:"bytes,1,opt,name=assignment,proto3,oneof"`
}

func (*SupervisorToWorker_Assignment) isSupervisorToWorker_Msg() {}

var File_runner_proto protoreflect.FileDescriptor

const file_runner_proto_rawDesc = "" +
	"\n" +
	"\frunner.proto\x12\trunner.v1\"\x8d\x01\n" +
	"\rResourceHints\x12%\n" +
	"\x0ecpu_millicores\x18\x01 \x01(\rR\rcpuMillicores\x12\x1b\n" +
	"\tmem_bytes\x18\x02 \x01(\x04R\bmemBytes\x12\x1b\n" +
	"\tgpu_count\x18\x03 \x01(\rR\bgpuCount\x12\x1b\n" +
	"\tgpu_class\x18\x04 \x01(\tR\bgpuClass\"`\n" +
	"\x05Mount\x12\x1b\n" +
	"\thost_path\x18\x01 \x01(\tR\bhostPath\x12\x1d\n" +
	"\n" +
	"mount_path\x18\x02 \x01(\tR\tmountPath\x12\x1b\n" +
	"\tread_only\x18\x03 \x01(\bR\breadOnly\"\xd0\x02\n" +
	"\x06RunEnv\x12\x1b\n" +
	"\toci_image\x18\x01 \x01(\tR\bociImage\x12\x12\n" +
	"\x04argv\x18\x02 \x03(\tR\x04argv\x12,\n" +
	"\x03env\x18\x03 \x03(\v2\x1a.runner.v1.RunEnv.EnvEntryR\x03env\x12(\n" +
	"\x06mounts\x18\x04 \x03(\v2\x10.runner.v1.MountR\x06mounts\x12&\n" +
	"\x0fhard_timeout_ms\x18\x05 \x01(\x04R\rhardTimeoutMs\x126\n" +
	"\tresources\x18\x06 \x01(\v2\x18.runner.v1.ResourceHintsR\tresources\x12%\n" +
	"\x0econtent_digest\x18\a \x01(\tR\rcontentDigest\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"L\n" +
	"\n" +
	"TensorMeta\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05shape\x18\x02 \x03(\x03R\x05shape\x12\x14\n" +
	"\x05dtype\x18\x03 \x01(\tR\x05dtype\"\x8e\x01\n" +
	"\n" +
	"RunRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x15\n" +
	"\x06run_id\x18\x02 \x01(\tR\x05runId\x12#\n" +
	"\x03env\x18\x03 \x01(\v2\x11.runner.v1.RunEnvR\x03env\x12-\n" +
	"\x06inputs\x18\x04 \x03(\v2\x15.runner.v1.TensorMetaR\x06inputs\"A\n" +
	"\aLogLine\x12\x0e\n" +
	"\x02ts\x18\x01 \x01(\tR\x02ts\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\tR\x03msg\"\x9e\x01\n" +
	"\tRunResult\x12\x1b\n" +
	"\texit_code\x18\x01 \x01(\x05R\bexitCode\x12&\n" +
	"\x04logs\x18\x02 \x03(\v2\x12.runner.v1.LogLineR\x04logs\x12/\n" +
	"\aoutputs\x18\x03 \x03(\v2\x15.runner.v1.TensorMetaR\aoutputs\x12\x1b\n" +
	"\tcache_key\x18\x04 \x01(\tR\bcacheKey\"\a\n" +
	"\x05Empty\"E\n" +
	"\fCreditReport\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x18\n" +
	"\acredits\x18\x02 \x01(\rR\acredits\"\xcd\x01\n" +
	"\vWorkerHello\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12!\n" +
	"\fmax_inflight\x18\x02 \x01(\rR\vmaxInflight\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12!\n" +
	"\fmesh_enabled\x18\x04 \x01(\bR\vmeshEnabled\x12 \n" +
	"\fmesh_node_id\x18\x05 \x01(\x04R\n" +
	"meshNodeId\x12\x1f\n" +
	"\vmesh_domain\x18\x06 \x01(\tR\n" +
	"meshDomain\"R\n" +
	"\aTaskAck\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\xa7\x01\n" +
	"\x0eTaskAssignment\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06tenant\x18\x02 \x01(\tR\x06tenant\x12\x14\n" +
	"\x05topic\x18\x03 \x01(\tR\x05topic\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x03R\x06offset\x12\x1c\n" +
	"\tpartition\x18\x06 \x01(\tR\tpartition\"d\n" +
	"\x0fWorkerHeartbeat\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x1c\n" +
	"\tprocessed\x18\x02 \x01(\x04R\tprocessed\x12\x16\n" +
	"\x06failed\x18\x03 \x01(\x04R\x06failed\"\xe2\x01\n" +
	"\x12WorkerToSupervisor\x12.\n" +
	"\x05hello\x18\x01 \x01(\v2\x16.runner.v1.WorkerHelloH\x00R\x05hello\x121\n" +
	"\x06credit\x18\x02 \x01(\v2\x17.runner.v1.CreditReportH\x00R\x06credit\x12&\n" +
	"\x03ack\x18\x03 \x01(\v2\x12.runner.v1.TaskAckH\x00R\x03ack\x12:\n" +
	"\theartbeat\x18\x04 \x01(\v2\x1a.runner.v1.WorkerHeartbeatH\x00R\theartbeatB\x05\n" +
	"\x03msg\"X\n" +
	"\x12SupervisorToWorker\x12;\n" +
	"\n" +
	"assignment\x18\x01 \x01(\v2\x19.runner.v1.TaskAssignmentH\x00R\n" +
	"assignmentB\x05\n" +
	"\x03msg2\xa8\x01\n" +
	"\tEnvRunner\x122\n" +
	"\x03Run\x12\x15.runner.v1.RunRequest\x1a\x14.runner.v1.RunResult\x128\n" +
	"\tStreamRun\x12\x15.runner.v1.RunRequest\x1a\x12.runner.v1.LogLine0\x01\x12-\n" +
	"\aHealthz\x12\x10.runner.v1.Empty\x1a\x10.runner.v1.Empty2b\n" +
	"\x10StreamSupervisor\x12N\n" +
	"\n" +
	"OpenStream\x12\x1d.runner.v1.WorkerToSupervisor\x1a\x1d.runner.v1.SupervisorToWorker(\x010\x01B\x8e\x01\n" +
	"\rcom.runner.v1B\vRunnerProtoP\x01Z+github.com/dspy/orchestrator/internal/pb;pb\xa2\x02\x03RXX\xaa\x02\tRunner.V1\xca\x02\tRunner\\V1\xe2\x02\x15Runner\\V1\\GPBMetadata\xea\x02\n" +
	"Runner::V1b\x06proto3"

var (
	file_runner_proto_rawDescOnce sync.Once
	file_runner_proto_rawDescData []byte
)

func file_runner_proto_rawDescGZIP() []byte {
	file_runner_proto_rawDescOnce.Do(func() {
		file_runner_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_runner_proto_rawDesc), len(file_runner_proto_rawDesc)))
	})
	return file_runner_proto_rawDescData
}

var file_runner_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_runner_proto_goTypes = []any{
	(*ResourceHints)(nil),      // 0: runner.v1.ResourceHints
	(*Mount)(nil),              // 1: runner.v1.Mount
	(*RunEnv)(nil),             // 2: runner.v1.RunEnv
	(*TensorMeta)(nil),         // 3: runner.v1.TensorMeta
	(*RunRequest)(nil),         // 4: runner.v1.RunRequest
	(*LogLine)(nil),            // 5: runner.v1.LogLine
	(*RunResult)(nil),          // 6: runner.v1.RunResult
	(*Empty)(nil),              // 7: runner.v1.Empty
	(*CreditReport)(nil),       // 8: runner.v1.CreditReport
	(*WorkerHello)(nil),        // 9: runner.v1.WorkerHello
	(*TaskAck)(nil),            // 10: runner.v1.TaskAck
	(*TaskAssignment)(nil),     // 11: runner.v1.TaskAssignment
	(*WorkerHeartbeat)(nil),    // 12: runner.v1.WorkerHeartbeat
	(*WorkerToSupervisor)(nil), // 13: runner.v1.WorkerToSupervisor
	(*SupervisorToWorker)(nil), // 14: runner.v1.SupervisorToWorker
	nil,                        // 15: runner.v1.RunEnv.EnvEntry
}
var file_runner_proto_depIdxs = []int32{
	15, // 0: runner.v1.RunEnv.env:type_name -> runner.v1.RunEnv.EnvEntry
	1,  // 1: runner.v1.RunEnv.mounts:type_name -> runner.v1.Mount
	0,  // 2: runner.v1.RunEnv.resources:type_name -> runner.v1.ResourceHints
	2,  // 3: runner.v1.RunRequest.env:type_name -> runner.v1.RunEnv
	3,  // 4: runner.v1.RunRequest.inputs:type_name -> runner.v1.TensorMeta
	5,  // 5: runner.v1.RunResult.logs:type_name -> runner.v1.LogLine
	3,  // 6: runner.v1.RunResult.outputs:type_name -> runner.v1.TensorMeta
	9,  // 7: runner.v1.WorkerToSupervisor.hello:type_name -> runner.v1.WorkerHello
	8,  // 8: runner.v1.WorkerToSupervisor.credit:type_name -> runner.v1.CreditReport
	10, // 9: runner.v1.WorkerToSupervisor.ack:type_name -> runner.v1.TaskAck
	12, // 10: runner.v1.WorkerToSupervisor.heartbeat:type_name -> runner.v1.WorkerHeartbeat
	11, // 11: runner.v1.SupervisorToWorker.assignment:type_name -> runner.v1.TaskAssignment
	4,  // 12: runner.v1.EnvRunner.Run:input_type -> runner.v1.RunRequest
	4,  // 13: runner.v1.EnvRunner.StreamRun:input_type -> runner.v1.RunRequest
	7,  // 14: runner.v1.EnvRunner.Healthz:input_type -> runner.v1.Empty
	13, // 15: runner.v1.StreamSupervisor.OpenStream:input_type -> runner.v1.WorkerToSupervisor
	6,  // 16: runner.v1.EnvRunner.Run:output_type -> runner.v1.RunResult
	5,  // 17: runner.v1.EnvRunner.StreamRun:output_type -> runner.v1.LogLine
	7,  // 18: runner.v1.EnvRunner.Healthz:output_type -> runner.v1.Empty
	14, // 19: runner.v1.StreamSupervisor.OpenStream:output_type -> runner.v1.SupervisorToWorker
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_runner_proto_init() }
func file_runner_proto_init() {
	if File_runner_proto != nil {
		return
	}
	file_runner_proto_msgTypes[13].OneofWrappers = []any{
		(*WorkerToSupervisor_Hello)(nil),
		(*WorkerToSupervisor_Credit)(nil),
		(*WorkerToSupervisor_Ack)(nil),
		(*WorkerToSupervisor_Heartbeat)(nil),
	}
	file_runner_proto_msgTypes[14].OneofWrappers = []any{
		(*SupervisorToWorker_Assignment)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_runner_proto_rawDesc), len(file_runner_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_runner_proto_goTypes,
		DependencyIndexes: file_runner_proto_depIdxs,
		MessageInfos:      file_runner_proto_msgTypes,
	}.Build()
	File_runner_proto = out.File
	file_runner_proto_goTypes = nil
	file_runner_proto_depIdxs = nil
}
